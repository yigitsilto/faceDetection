version: '3.1'

services:
  go:
    build:
      context: .
      dockerfile: ./DockerFile
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      kafka:
        condition: service_healthy
    ports:
      - "9000:9000"
    volumes:
      - type: bind
        source: ./public
        target: ./public
    restart: always

  redis:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass root
    volumes:
      - redis:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
            
  postgres:
    container_name: macromusic_postgres
    image: postgres:latest
    environment:
      POSTGRES_USER: macromusic
      POSTGRES_PASSWORD: macromusic
      POSTGRES_DB: macromusic
      PGDATA: /data/postgres
    volumes:
      - postgres-db:/data/postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U macromusic -d macromusic"]
      interval: 30s
      timeout: 20s
      retries: 5
      

  zookeeper:
    container_name: macromusic_zookeper
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    healthcheck:
      test: [ "CMD", "echo", "ruok" ]
      interval: 10s
      timeout: 5s
      retries: 3


  kafka:
    container_name: macromusic_kafka
    image: confluentinc/cp-kafka:latest
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: [ "CMD", "kafka-topics", "--bootstrap-server", "localhost:29092", "--list" ]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: always

volumes:
  postgres-db:
    driver: local
  redis:
    driver: local
